------------------------------------------------------
(página "Un endpoint para acceder a una modificación individual")
El hilo general, el de la página.

Lo que hicimos
se puede ir mostrando el código.

Nuevo endpoint
se puede pensar desde el Postman, ¿qué pondríamos? Una especie de TDD sin escribir el test.
Cómo identificar un recurso: decisión de arquitectura, que puede variar de proyecto en proyecto. Acá optamos por una fácil: si no hay un identificador claro, idealmente determinado por una autoridad externa (ponele, códigos de moneda) entonces usamos los ID de Mongo.
Cómo describir la operación: al ponerle una URL fija, se le quiere dar entidad, una de las acciones posibles sobre una solicitud es pasarla a pendiente. 

El servicio
No más de lo que dice en el texto. Lo puedo ir armando.

Hacerlo andar.
Mostrar la repetición del código que pasa de AccountRequestMongoose a AccountRequest. Puntualizar que la función puede estar "suelta", no tiene por qué ser un método del provider. Idem con la que se arme en el controller.
Entre paréntesis: la de "make it work / make it right / make it fast" ¿la tenían, no?
Podemos mostrarlo de c2, https://proxy.c2.com/cgi/wiki?MakeItWorkMakeItRightMakeItFast , así los presentamos a los amigos C.

Otro ejercicio.
Ojalá lo hagan, o al menos lo empiecen. Depende de cómo andemos de tiempo, lo puedo arrancar. Es interesante ver cómo se marcan los errores, esto para hacer propaganda de que tipen.



------------------------------------------------------
(página "Modificación masiva")
Lo que dice la página.

Se podría armar un modelito de empleados para probar lo que se indica. Con hacerlo un rato antes alcanza. Meterlo en una app distinta para no hacer lío. Si no se hizo antes, crear una app de "pruebitas". Se puede agregar un virtual de "esCapo" si la categoría es > 2.

Comentar que de paso seguimos aprendiendo opciones sobre las búsquedas en Mongo/Mongoose.


------------------------------------------------------
(página "Baja")
Lo que dice la página.

Focos
- métodos de Mongoose: findById / findByIdAndDelete. Podemos probar que el findByIdAndDelete devuelve null, armé un test.
- probar que con un id mal formado se rompe, esto se puede hacer con el postman comentando el chequeo
- expresiones regulares
- refactor para unificar la búsqueda de una solicitud, que ya la tenemos en la modificación
- posibles errores
- cuatro tests


------------------------------------------------------
(página "Alta masiva")
Lo que dice la página.

Focos
- insertMany, se pueden repasar las opciones de la doc de Mongoose, aclarando que no probamos.
- hace falta una transformación, quién la hace
- función aparte, hacer y testear
- después es coser y cantar



------------------------------------------------------
(página "Extra - refactor en los tests")
Lo que dice la página.

La evolución está en la carpeta test/account-request-mongo-intermedio. 

Conviene muchisimo ir haciéndolo y que lo vean. Insistir en lo de código genérico.

Los chiches (clase abstracta, destructuring, clase) probar las variantes que no andan y mostrar qué es lo que no compila.

Chiche fuera de programa: funciones findByCustomerFor y findSureByCustomerFor. Interesante tiparlas para que anden tanto para AccountRequest como para AccountRequestDTO.